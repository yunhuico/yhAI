{
    "common": {
        "failed": "Operate Failed",
        "success": "Operate Success",
        "loading": "Loading",
        "close": "Close",
        "name": "Name",
        "email": "Email",
        "company": "Company",
        "createdTime": "Created Time",
        "endTime": "End Time",
        "action": "Actions",
        "cancel": "Cancel",
        "save": "Save",
        "nodeHasPipework": "Can't Delete, because you have a node with pipework network",
        "deleteConfirm": "Confirm Delete",
        "delete": "Delete",
        "terminate": "Terminate",
        "start": "Ongoing",
        "stop": "Stop",
        "bootstrap": "Start",
        "create": "Create",
        "upload": "Upload",
        "status": "Status",
        "type": "Type",
        "add": "Add",
        "search": "Search",
        "restart": "Restart",
        "confirm": "Confirm",
        "userName": "Username",
        "userNamePattern": "User name must be character and number and -",
        "password": "Password",
        "oldPassword": "Old Password",
        "newPassword": "New Password",
        "confirmPassword": "Confirm Password",
        "login": "Login",
        "resetPassword": "Reset User Password",
        "inputUser": "Please input username",
        "send": "Send",
        "searchPassword": "Search Password",
        "forgetPassword": "Forget Password ?",
        "resetPassword": "Reset Password",
        "sendSuccess": "Send Successfully",
        "PleaseSelectTheCorrespondingCluster": "Please select one cluster at least",
        "PleaseSelectTheCorrespondingNode": "Please select one node at least",
        "NoChoice": "Choose No Element",
        "INSTALLING": "Installing",
        "MODIFYING": "Modifying",
        "DEPLOYING": "Deploying",
        "RUNNING": "Running",
        "FAILED": "Failed",
        "TERMINATING": "Terminating",
        "DELETING": "Deleting",
        "IDLE": "Not Deployed",
        "STOPPED": "Stopped",
        "TASK_RUNNING": "Running",
        "INPROCESSING": "In Processing",
        "INCOMPLETE": "Partial Deployed",
        "WAITING": "WAITING",
        "UNKNOWN": "Unknown",
        "SUSPENDED": "Suspend",
        "fail": "Failed",
        "success": "Success",
        "record": " Records",
        "total": "Total ",
        "chinese": "中文",
        "english": "English",
        "logout": "Logout",
        "updatedTime": "Updated Time",
        "coming": "Upgrading...",
        "close": "Close",
        "integer": "The number of nodes must be positive integer.",
        "owner": "Owner",
        "edit": "Edit",
        "container": "Container",
        "memory": "Memory",
        "disk": "Disk",
        "tag": "Label",
        "ok": "OK",
        "entrypoint": "Entry Point",
        "task": "Task",
        "all": "All",
        "id": "ID",
        "node": "Node",
        "deploy": "Deploy",
        "uninstall": "Uninstall",
        "cpu": "CPU",
        "gpu": "GPU",
        "memory": "Memory",
        "cpuTotal": "Total CPU",
        "memoryTotal": "Total Memory",
        "gpuTotal": "Total GPU",
        "cpuUsed": "CPU Usage",
        "memoryUsed": "Memory Usage",
        "gpuUsed": "GPU Usage",
        "duration": "Duration",
        "deployConfirm": "Deploy Confirm",
        "profile": "Basic Information",
        "user": "User",
        "framework": "Framework",
        "service": "Service",
        "desc": "Description",
        "cluster": "Cluster",
        "detail": "Detail",
        "containerNum": "Total Container",
        "containerNumRunning": "Running Container Number",
        "hostNum": "Host Num",
        "port": "Port",
        "env": "Environment Variable",
        "key": "Key",
        "value": "Value",
        "volume": "Volume",
        "rwMode": "Mode",
        "readOnly": "Read Only",
        "rw": "Read and Write",
        "command": "Command",
        "deployStrategy": "Deploy Strategy",
        "ha": "High Availability",
        "concentrated": "Concentrated",
        "constraint": "Constraint",
        "equal": "Equal",
        "notEqual": "Not Equal",
        "scale": "Scale",
        "autoscale": "Automatic Scaling",
        "autoScaleOut": "Automatic Scale Out",
        "autoScaleIn": "Automatic Scale In",
        "upperLimit": "Instance Upper Limit",
        "lowerLimit": "Instance Lower Limit",
        "previous": "Previous",
        "next": "Next",
        "segment": "Segment",
        "externalPort": "External Port",
        "network": "Network",
        "bridge": "Bridge",
        "host": "Host",
        "alarm": "Alarm",
        "userdefined": "User-Defined",
        "overrunAlarm": "Overrun Alarm",
        "graph": "Graph",
        "refresh": "Refresh",
        "increase": "Increase",
        "decrease": "Decrease",
        "publicnet": "Public IP",
        "privatenet": "Private IP",
        "domainName": "Domain Name",
        "customized": "Customized",
        "google": "Google",
        "amazonec2": "AWS",
        "openstack": "OpenStack",
        "remove": "Remove",
        "unknown": "Unknown",
        "parameters": "Parameters",
        "comments": "Comments",
        "secure": "Secure",
        "kill": "Terminate",
        "redeploy": "Redeploy",
        "operateConfirm": "Confirm Operate",
        "OFFLINE": "Offline",
        "certificate": "Certificate",
        "Registry": "Registry",
        "note": "tag",
        "Console": "Console",
        "Healthy": "Healthy",
        "UnHealthy": "UnHealthy"
    },
    "directive": {
        "pagination": {
            "first_page": "First",
            "previous_page": "Previous",
            "next_page": "Next",
            "last_page": "Last"
        }
    },
    "main_nav": {
        "clustermgt": "Cluster",
        "usermgt": "User",
        "profile": "Profile",
        "nodemgt": "Node",
        "configmgt": "Configuration",
        "servicemgt": "Service",
        "frameworkmgt": "Framework",
        "logmgt": "Log",
        "clusterInfomgt": "Cluster",
        "monitormgt": "Monitor",
        "alertmgt": "Alert",
        "componentmgt": "Component",
        "networkmgt": "Network",
        "infomgt": "Information"
    },
    "header": {
        "node": "Node",
        "framework": "Framework",
        "service": "Service",
        "network": "Network",
        "log": "Log",
        "cluster": "Cluster",
        "clusterInfo": "Cluster Information",
        "monitor": "Monitor",
        "component": "Component",
        "user": "User",
        "configuration": "Configuration",
        "nodedetail": "Node Detail",
        "service.detail": "Service Detail",
        "service.detail.container": "Container Detail",
        "framework.detail": "Framework Detail"
    },
    "user": {
        "listFailed": "List User Failed",
        "edit": "Edit User",
        "create": "Create User",
        "saveFailed": "Save User Failed",
        "roleType": "Role Type",
        "updateSuccess": "Update User Successfully",
        "deleteMessage": "Confirm To Delete This User?",
        "deleteFailed": "Delete User Failed",
        "absortDeleteTitle": "Can't Delete This User",
        "absortDeleteContent": "There are some clusters belong to this user, please delete these clusters at first",
        "getClusterFailed": "Get User Cluster Failed",
        "loginFailed": "Login Failed",
        "usernameRequired": "Username is required",
        "usernameIsUsed": "Username has been already used, input another one",
        "emailRequired": "Email is required",
        "emailNotValidate": "Email is not validate",
        "delete": "Delete User",
        "getCluster": "Check User Clusters",
        "passwordRequired": "Password is required",
        "isCheckingPassword": "Password is checking",
        "passwordError": "Password is not correct",
        "newPasswordRequired": "New Password is required",
        "confirmPasswordRequired": "Confirm Password is required",
        "confirmPasswordError": "Confrim Password isn't Consistent with New Password",
        "platform": "Platform Info",
        "platformMgt": "Platform Management",
        "currentUser": "Current User",
        "goBackToUser": "Go Back To User Page",
        "userNamePattern": "User name must be character and number and -",
        "updatePassword": "Update Password",
        "updatePasswordSuccess": "Update Password Successfully",
        "userNameMaxLength": "Maximum is 10 characters"
    },
    "cluster": {
        "AllUser": "All Users",
        "openCMI": "Open CMI",
        "closeCMI": "Close CMI",
        "toggleCMISuccess": "Toggle CMI Success",
        "Refresh": "Refresh Cluster",
        "Delete": "Delete",
        "NewCluster": "Create Cluster",
        "Endpoint": "Cluster Entrypoint",
        "NodeNum": "Node Count",
        "DeleteCluster": "Delete Cluster",
        "ConfirmDelete": "Confirm Delete Cluster",
        "current": "Current Cluster",
        "switch": "Switch Cluster",
        "chooseClusterDelete": "Choose Cluster To Delete",
        "installingCluster": "(Cluster is installing)",
        "needCreateCluster": "(User needs to create cluster)",
        "terminatingCluster": "(Cluster is terminating)",
        "failedCluster": "(Cluster is failure to create)",
        "modifyingCluster": "(Cluster is modifying)",
        "terminatedCluster": "(Cluster is terminated)",
        "internalIPOpen": "Enable",
        "internalIPClose": "Disable",
        "CreateCluster": {
            "providerType": "Provider Type",
            "providerAccount": "Provider Account",
            "provider": "Provider",
            "provider_name": "Provider Name",
            "IP": "IP Address",
            "ClusterType": "Cluster Type",
            "AWSArea": "AWS Area",
            "HardDisk": "HardDisk",
            "LoginKey": "Login Key",
            "ClusterName": "Cluster Name",
            "ClusterNameAlert": "Cluster name is required.",
            "ClusterNamePattern": "Cluster name must be character or number or -",
            "ClusterNamePatternGoogle": "Cluster name in google must be lowercase character or number or -",
            "ClusterNameLength": "Cluster name can not be longer than 15",
            "NetWorkAlert": "Network is required.",
            "NetWorkPattern": "Network must be character and number",
            "TargetUser": "Target User",
            "NodeNumber": "Node Number",
            "ExtraNodeNumber": "Extra Agent Number",
            "ExtraShareNodeNumber": "Extra Share Node",
            "ExtraSlaveNodeNumber": "Extra Slave Node",
            "NodeNumberInfo": "The number of nodes must be non-negative integer",
            "NodeBothCountZero": "At least one Extra Node is needed",
            "ClusterDescription": "Cluster Description",
            "required": "Node Number is required",
            "number": "Invalidate Number",
            "clusterNameDuplicate": "Current target user has this cluster already",
            "userClusterDuplicate": "Selected user has this cluster already",
            "providerNone": "Provider is empty,please create one",
            "registryNone": "Registry is empty,please create one",
            "pubkeyNone": "Pubkey is empty,please create one",
            "ClusterUserNamePattern": "UserName must be character and number",
            "ClusterIpPattern": "Please in the IP address format",
            "NetworkAdapterInfo": "Host private network card , communication between the components depend on the IP address of the network card , the default is eth0",
            "IpDuplicate": "IP Duplicate",
            "nodeInfo": "Node Information",
            "advancedSetting": "Advanced Setting",
            "HA": "HA,3 masters,at least 2 agent",
            "Lite": "Lite,1 master,at least 1 agent",
            "Daemon": "Docker Daemon Opt",
            "DaemonInfo": {
                "example": "E.g:",
                "tips": "Tips",
                "first": "Make sure the key-value pairs are valid docker daemon parameters, illegal parameter will causes the operation to fail"
            }
        },
        "condition": "Condition",
        "nodeConditions": {
            "first": "Centos7 system",
            "second": "Cancel firewall",
            "third": "Set the user's sudo password and TTY free",
            "forth": "Set key login authentication mode",
            "fifth": "All nodes are connectable with private ip",
            "sixth": "The machine has installed net-tools"
        }
    },
    "node": {
        "NodeManagement": "Node Management",
        "AddNode": "Add Node",
        "ScaleNode": "Scale out Node",
        "updateRegistry": "Update Registry",
        "selectRegistry": "Select Registry \n (Add / Delete)",
        "updatePublickey": "Update Public Key",
        "selectPublickey": "Select Public key \n (Add / Delete)",
        "updatePublickeySuccess": "Update Public Key Success",
        "AddNodeFailed": "Cluster has failed nodes, in order to avoid additional costs proposed to delete them",
        "CurrentNodeNum": "Current Node Number",
        "AddNum": "Increase Number",
        "AddNumAlert": "Increase number is required",
        "AddNumMin": "Minmum number to increase is 1",
        "masterNode": "Master",
        "childNode": "Slave",
        "shared": "Shared",
        "currentCluster": "Current Cluster",
        "Back": "Back To Cluster Page",
        "newNode": "New Node",
        "existNode": "Exist Node",
        "nodeName": "Node Name",
        "deleteMessage": "Do you want to delete this node？",
        "deleteNodeMessage": "Do you want to delete",
        "failedNode": "this failed node",
        "deleteNodesMessage": "Do you want to delete these nodes?",
        "image": "Image",
        "version": "Version",
        "taskID": "Task ID",
        "taskName": "Task Name",
        "NodeNumberInfo": "Minimum number of node is 0",
        "NodeNumberAlert": "Minimum number of node is 0",
        "NodeOrAlert": "Slave and Share both has one more than 0",
        "MonitoringInformation": "Monitoring Information",
        "returnNode": "Return node page",
        "NodeUserNamePattern": "Username follow the rules of linux username",
        "NodeType": "Provider Type",
        "role": "Type",
        "filterNode": "Filter node",
        "filter": "Filter",
        "default": "None",
        "clear": "Clear",
        "slack": "Slack resource",
        "attacked": "Attacked",
        "feedback": "Feedback",
        "retrain": "Retrain",
        "platform": "Platform"
    },
    "monitor": {
        "filter": "Filter",
        "memory": "Memory",
        "totolUsage": "Total Usage",
        "diskUsage": "Disk",
        "usagePerCore": "Usage per Core",
        "usageBD": "Usage Breakdown",
        "hotMemory": "Hot Memory",
        "coldMemory": "Cold Memory",
        "network": "Network",
        "interface": "Interface",
        "throughput": "Throughput",
        "errors": "Errors",
        "filesystem": "Filesystem",
        "txbytes": "Tx bytes",
        "rxbytes": "Rx bytes",
        "diskio": "Disk I/O",
        "diskread": "Disk Read",
        "diskwrite": "Disk Write",
        "nodesNotFound": "No nodes in the selected cluster",
        "dataNotFound": "Failed to get monitoring data",
        "clusterNotFound": "No clusters found"
    },
    "alert": {
      "searchByName": "Search By Name...",
      "searchByAction": "Search By Action..."
    },
    "component": {
        "health": "Health",
        "ip": "IP Address",
        "getComponentFail": "Get Components Failed"
    },
    "config": {
        "key": {
            "tab": "Login Key Pair",
            "createBtn": "Create Key Pair",
            "uploadBtn": "Upload Key Pair",
            "publickey": "Public Key",
            "createSuccess": "Create Key Pair Successfully",
            "downloadTips": "Please save your private key that just can be downloaded only one time, please keep it safe.",
            "listFailed": "List Key Pairs Failed",
            "createFailed": "Create Key Pair Failed",
            "downloadFailed": "Download Private Key Failed",
            "uploadFailed": "Upload Key Pair Failed",
            "deleteFailed": "Delete Key Pair Failed",
            "deleteMessage": "Confirm To Delete This Key Pair?",
            "formError": {
                "nameIsRequired": "Name is required.",
                "nameIsInvalid": "Name must be character and number.",
                "publickeyIsRequired": "Public key is required."
            }
        },
        "smtp": {
            "name": "SMTP Server",
            "address": "Server Name",
            "add": "Add Server",
            "edit": "Edit Server",
            "listFailed": "List SMTP Servers Failed",
            "addFailed": "Add SMTP Server Failed",
            "updateFailed": "Update SMTP Server Failed",
            "deleteFailed": "Delete SMTP Server Failed",
            "deleteMessage": "Confirm To Delete This SMTP Server?",
            "formError": {
                "addressIsRequired": "SMTP server name is required.",
                "addressIsInvalid": "SMTP server name is invalid.",
                "usernameIsRequired": "User name is required.",
                "passwordIsRequired": "Password is required."
            }
        },
        "platform": {
            "SshUser": "SSH User",
            "deleteFailed": "Delete Platform Failed",
            "listFailed": "List Platform Failed",
            "createFailed": "Create Platform Failed",
            "editFailed": "Edit Platform Failed",
            "name": "Platform Management",
            "addplatform": "Add Platform",
            "editplatform": "Edit Platform",
            "delete": "Confirm To Delete This Platform?",
            "address": "Address",
            "username": "Username",
            "password": "Password",
            "TenantName": "Tenant Name",
            "FlavorName": "Flavor Name",
            "imageName": "Image Name",
            "safeGroup": "Safe Group",
            "IpPool": "Ip Pool",
            "webName": "Web Name",
            "accessKey": "Access Key",
            "privateKey": "Private Key",
            "imageId": "Image ID",
            "instanceType": "Instance Type",
            "rootSize": "Root Size",
            "region": "Region",
            "VPCId": "VPC ID",
            "NetworkAdapter": "Network Adapter",
            "awsPrompt": "Notes: 2376, 3376, 8500, 80, 10010, these ports is to open in aws security group",
            "formError": {
                "notEmpty": " is required.",
                "nameIsInvalid": "must be character and number.",
                "NameDuplicate": "Platform Name Duplicate"
            }
        },
        "registry": {
            "title": "Docker Registry",
            "create": "Create Registry",
            "add": "Add Registry",
            "registryUrl": "Registry URL",
            "delete": "Confirm To Delete This Registry?",
            "empty": "Registry Name Required",
            "duplicate": "Registry Name Duplicate",
            "registry": "Do Not Need To Start With HTTP or HTTPS"
        }
    },
    "framework": {
        "deployed": "Deployed",
        "tasks": "Installed Frameworks",
        "category": "Framework Category",
        "uninstallConfirm": "Confirm Uninstall",
        "uninstallMessage": "Do you want to uninstall this framework?",
        "uninstallFailed": "Uninstall Framework Failed",
        "listFailed": "List Framework Failed",
        "deployMessage": "Do you want to deploy this framework?",
        "add": "Add Framework",
        "no": "No available framework",
        "taskListFailed": "List Task Failed",
        "DEPLOYING": "Deploying",
        "DELETING": "Undeploying",
        "CREATED": "Created",
        "PROCESS": "Processing",
        "repository": "Framework Repository",
        "name": "Repository Name",
        "url": "Repository URL",
        "addRepository": "Add Repository",
        "getRepositoryFailed": "Get Repository Failed",
        "nameRequired": "Repository name required",
        "urlRequired": "Repository url required",
        "urlValid": "Repository url is only started with http:// or https://",
        "deleteRepository": "Do you want to delete this repository ?",
        "frameworkDescriptionFailed": "Get Framework Description Failed",
        "install": "Install Framework",
        "advancedInstall": "Advanced Installation",
        "gobackToFramework": "GoBack to Framework",
        "version": "Version",
        "description": "Description",
        "preInstall": "Pre-Install Notes",
        "postInstallNotes": "Post-Install Notes",
        "postUninstallNotes": "Post-Uninstall Notes",
        "isRequired": "isn't empty",
        "search": "Search by tag",
        "isInteger": "must be integer",
        "goBack": "Back",
        "require": "must be",
        "information": "Information",
        "isNumber": "must be number",
        "selected": "selected",
        "community": "community",
        "oneClickInstall": "One-Click Install",
        "installSuccess": "Install Successfully",
        "namePattern": "Number, lowercase letters, capital letters and Minus(-) included, Minus isn't allowed in header and end",
        "regex": "doesn't meet the requirements",
        "uninstallSuccess": "Uninstall Successfully",
        "actionSuccess": "Action Successfully",
        "installConfirm": "Confrim Install",
        "installMessage": "Do you want to install this framework?"
    },
    "log": {
        "listFailed": "List Log Failed",
        "add_hosts": "Add Host",
        "delete_hosts": "Delete Host",
        "create_cluster": "Create Cluster",
        "delete_cluster": "Delete Cluster",
        "installation_failed": "VM Install Failed",
        "systemComponent_failed": "System Component Install Failed",
        "service_failed": "Service Component Install Failed",
        "delete_registry": "Delete Registry",
        "create_registry": "Create Registry",
        "create_provider": "Create Provider",
        "delete_provider": "Delete Provider",
        "update_provider": "Update Provider",
        "delete_pubkey": "Delete Public Key",
        "create_pubkey": "Create Public Key",
        "save_pubkey": "Save Public Key",
        "delete_smtp": "Delete SMTP",
        "create_smtp": "Create SMTP",
        "update_smtp": "Update SMTP",
        "create_service": "Create Service",
        "delete_service": "Delete Service",
        "start_service": "Start Service",
        "stop_service": "Stop Service",
        "update_service": "Update Service",
        "create_component": "Create Component",
        "update_component": "Update Component",
        "scale_component": "Scale Component",
        "stop_component": "Stop Component",
        "start_component": "Start Component",
        "delete_component": "Delete Component",
        "create_network": "Create Network",
        "delete_network": "Delete Network",
        "create_user": "Create User",
        "update_user": "Update User",
        "delete_user": "Delete User"
    },
    "service": {
        "SCALED_APP_ID": "SCALED APPID",
        "SCALE_NUMBER": "SCALE NUMBER",
        "number": "Please enter number",
        "listFailed": "Query Service List Failed",
        "startFailed": "Start Service Failed",
        "saveFailed": "Save Service Failed",
        "updateFailed": "Update Service Failed",
        "existJSON": "Use Existing Marathon JSON",
        "create": "Create Service",
        "json": "Marathon JSON",
        "component": "Component",
        "relationship": "Relationship",
        "healthChecks": "Health Checks",
        "healthCheck": "Health Check",
        "address": "Service Endpoint",
        "namePattern": "Number, lowercase letters and Minus(-) included, Minus isn't allowed in header and end",
        "nameRequired": "Service Name is Required",
        "tip": "If you are familiar with Marathon, you can use your own JSON.",
        "tip_1": "In order to create successfully，please ensure Group ID in Marathon JSON is same with service name.",
        "createComponent": "Create Component",
        "basic": "Basic",
        "feature": "Feature",
        "advanced": "Advanced",
        "componentTip": "Name is unique in service, it also as the dns name. It must be character and number",
        "resource": "Resource",
        "containerRuntime": "Container Runtime",
        "dockerRuntime": "Docker Runtime",
        "mesosRuntime": "Mesos Runtime",
        "componentPort": "Component Port",
        "componentPortTip": "Access port for other internal components",
        "servicePort": "Service Port",
        "servicePortTip": "Access port for external, it can be empty if no need, it can't repeat in one cluster",
        "name": "Name",
        "protocol": "Protocol",
        "path": "Path",
        "gracePeriod": "Grace Period",
        "interval": "Interval",
        "timeout": "Timeout",
        "seconds": "seconds",
        "maxConsecutiveFailures": "Max. Consecutive Failures",
        "portIndex": "Port Index",
        "port": "Port Number",
        "portType": "Port Type",
        "ignoreHttp1xx": "Ignore HTTP informational status codes 100 to 199.",
        "command": "Command",
        "hostPort": "Host Port",
        "containerDir": "Container Directory",
        "volumeDir": "Volume Directory",
        "deployStrategy": "Deploy Strategy",
        "deployConstraint": "Deploy Constraint",
        "connect": "Component Dependency",
        "cpuUpperLimit": "CPU Upper Limit (%)",
        "memoryUpperLimit": "Memory Upper Limit (%)",
        "cpuLowerLimit": "CPU Lower Limit (%)",
        "memoryLowerLimit": "Memory Lower Limit (%)",
        "componentrelations": "Component Relationship Graph",
        "addComponent": "Add Component",
        "componentNamePattern": "",
        "imageRequired": "Image name is required",
        "cpuRequired": "CPU is required",
        "gpuRequired": "GPU is required",
        "memoryRequired": "Memory is required",
        "diskRequired": "Disk is required",
        "increaseNum": "Increase Number",
        "decreaseNum": "Decrease Number",
        "deleteMessage": "Are you sure to delete this service?",
        "noComponent": "There is no component",
        "selectedReference": "Selected Related Components",
        "noReference": "No Related Component ",
        "showComponentLater": "JSON is uploaded by user, component can't be listed until deploying finished.",
        "editJSON": "Edit JSON",
        "editComponent": "Edit Component",
        "componentListFailed": "Get Component Failed",
        "scaleContainer": "Container Scale",
        "gobackToService": "Goback to Service",
        "gobackToDetail": "Goback to Service Detail",
        "componentstartFailed": "Start Component Failed",
        "componentstopFailed": "Stop Component Failed",
        "componentscaleFailed": "Scale Component Failed",
        "componentsaveFailed": "Save Component Failed",
        "componentdeleteFailed": "Delete Component Failed",
        "componentDeleteMessage": "Are you sure to delete this component?",
        "containergetFailed": "Get Container Information Failed",
        "noEnv": "No Environment Variable",
        "noMapping": "No Volume Mapping",
        "increaseNumRequired": "Increase number is required",
        "decreaseNumRequired": "Decrease number is required",
        "cpuMax": "Maximum value of CPU is 1",
        "cpuMin": "The value of CPU must be greater than 0",
        "gpuMax": "Maximum value of CPU is 40",
        "gpuMin": "The value of GPU must be greater than 0",
        "containerredeployMessage": "Are you sure to redeploy this container?",
        "containerkillMessage": "Are you sure to terminate this container?",
        "deleteFailed": "Delete Service Failed",
        "containeroperateFailed": "Operate Container Failed",
        "showTypeWarning": "The type of file that is dragged is required to JSON",
        "showLengthWarning": "The number of file that is dragged is required to 1",
        "dragFile": "Drag .json file here or Write the json code directly(The file size is less than or equal to 5MB)",
        "createComponentInfo": {
            "downloadImage": "Forced Download Image",
            "highPrivilege": "High Privilege Mode Operation",
            "allowExternalAccess": "Allow External Access",
            "name": "Name",
            "protocol": "Protocol",
            "ContainerPort": "Container Port",
            "LoadBalancerExternalPort": "Load Balancer External Port",
            "Connection": "This component can be accessed in the following ways",
            "first": "Load Balancer",
            "env": "Add access to environment variables",
            "number": "Please enter non-negative integer"
        },
        "healthCheckRequired": {
            "pathRequired": "Path is required",
            "gracePeriodSecondsRequired": "Grace Period is required",
            "intervalSecondsRequired": "Interval is required",
            "timeoutSecondsRequired": "Timeout is required",
            "maxConsecutiveFailuresRequired": "Max. Consecutive Failures is required",
            "portIndexRequired": "Port Index is required",
            "portRequired": "Port Number is required",
            "commandRequired": "Command is required"
        },
        "containerInfo": {
            "details": "Details",
            "files": "Files",
            "logs": "Logs",
            "stdout": "OUTPUT (STDOUT)",
            "stderr": "ERROR (STDERR)"
        }
    },
    "network": {
        "internalNetwork": "Internal Network",
        "externalNetworkMapping": "External Network Mapping",
        "driverType": "Driver Type",
        "addNetwork": "Create Network",
        "terminateAll": "Terminate All",
        "terminateAllConfirm": "Confirm To Delete All Networks?",
        "terminateConfirm": "Confirm To Delete This Network?",
        "networkName": "Network Name",
        "clustHostName": "Cluster Host Name",
        "scope": "Scope",
        "overlay": "Overlay",
        "bridge": "Bridge",
        "bridgeService": "Bridge",
        "bindInterface": "Bind interface",
        "networkdriver": "Network Driver",
        "internal": "Internal",
        "external": "External",
        "subnet": "Subnet",
        "gateway": "Gateway",
        "iprange": "Iprange",
        "IpPattern": "Format is 192.168.11.1/24",
        "GatewayPattern": "Format is 192.168.11.15",
        "NameDuplicate": "Network Name Duplicate",
        "NetworkError": "segment format error, please re-enter",
        "NetworkDomain": "Network Domain Name"
    },
    "information": {
        "t1": "What's new in version 3.0.0",
        "t2": "Support Google Cloud Engine",
        "t3": "Support Share Memory",
        "t4": "Support Pipework network",
        "t5": "Support Low Latency kernel host",
        "c1": "LinkerDCOS v3.0.0",
        "c11": "Mesos v1.2.1",
        "c12": "Marathon v1.4.2",
        "c13": "Zookeeper v3.4.8",
        "c14": "Docker v1.12.0",
        "c2": "Support to create LinkerDCOS cluster in GCE",
        "c21": "Activation Code：VK7JG-NFKHK-D3OPF-38YDN-M1YB3",
        "c22": "Active State：Actived",
        "c3": "Applications on LinkerDCOS can communicate with each other in share memory mode",
        "c31": "Activation Code：EU78P-QIDBE-2SRL94-BZI9Q-ORWAK",
        "c32": "Active State：Actived",
        "c4": "Create and configure ovs network",
        "c41": "Activation Code：39KDM-WNL6E-NCF6Y-QSXP4-EDPNF",
        "c42": "Active State：Actived",
        "c5": "LinkerDCOS support Low latency kernel host",
        "c51": "Activation Code：UTDLE-47BH3-OTDBS-H26BS-VNX9T",
        "c52": "Active State：Actived"
    },
    "error": {
        "Web.ServiceUnavailable": "Service Unavailable.",
        "Web.NotSignIn": "Please Sign In First.",
        "Web.UnreachableServer": "No Reachable Servers",
        "EndPoint.Unavailable": "DCOS-Client Address is Unavailable",
        "noneCluster": "Please creat Cluster first",
        "repositoryAlreadyPresent": "Repository Name Or URL was already present",
        "400": "Parameter Request Failed",
        "401": "Access Not Authorized",
        "405": "Method Not Allowed",
        "500": "Internal Server Error",
        "404": "Not Found",
        "502": "Gateway Timeout",
        "409": "Framework has been installed",
        "E10000": "Signup Failed",
        "E10001": "User Quantity Overrun",
        "E10002": "User Activation Failed",
        "E10003": "Create User Failed",
        "E10004": "User Not Found",
        "E10005": "Incorrect Password",
        "E10006": "Inactive User",
        "E10007": "Change User Failed",
        "E10008": "Namespace Duplication",
        "E10009": "User Already Exists",
        "E10010": "Delete User Failed",
        "E10011": "Query User Failed",
        "E10012": "Login Failed",
        "E10013": "Delete User Failed,User has running cluster",
        "E10016": "User Has Been Deleted",
        "E10030": "Role Creation Failed",
        "E10031": "Query Role Failed",
        "E10040": "Query Tenant Failed",
        "E10041": "Failed To Create Tenant",
        "E10050": "Token Does Not Exist",
        "E10051": "Failed To Create Token",
        "E10052": "Token Expiration",
        "E10053": "Token Failed",
        "E12001": "Unknown Error",
        "E12002": "Illegal Parameters",
        "E12003": "Internal Error",
        "E12004": "Unauthorized Operation",
        "E12005": "Invoke Marathon Error",
        "E12006": "Invoke Database Error",
        "E20601": "Request URL Parameter Error",
        "E20602": "Request HEADER Error",
        "E20603": "Request BODY Error",
        "E20604": "Authentication Error, Unauthorized",
        "E20600": "Other Request Error",
        "E20701": "Null Pointer Exception",
        "E20702": "Type Conversion Exception",
        "E20703": "Json Exception",
        "E20704": "Configuration File Error",
        "E20705": "File Read Failure",
        "E20706": "File Create Failed",
        "E20707": "File Write Failed",
        "E20708": "File Delete Failed",
        "E20709": "Archive Decompression Error",
        "E20710": "XML Parsing Error",
        "E20711": "Command Execution Error",
        "E20712": "TOKEN Generation Error",
        "E20713": "Database Insertion Record Failed",
        "E20714": "Database Query Log Failed",
        "E20715": "Database Delete Record Failed",
        "E20716": "Database Update Record Failed",
        "E20700": "Other Internal Error",
        "E30001": "Parameter error, usually is the parameter is empty or the length and so on is not legitimate",
        "E30002": "Internal error, which is generally a procedural error, should avoid this exception.",
        "E30003": "When the signature is not equal, return this error.",
        "E30004": "According to cloudProvider parameters can not get the appropriate service, is illegal cloudProvider",
        "E50000": "Cluster Create Failed",
        "E50001": "Cluster Update Failed",
        "E50002": "Cluster Delete Failed",
        "E50003": "Cluster Name Already Exist",
        "E50004": "Cluster Query Failed",
        "E50010": "Cluster Number Invalid",
        "E50011": "Cluster Name Invalid",
        "E50012": "Cluster Type Invalid",
        "E50013": "Connect User Module Failed",
        "E50014": "Connect Deployment Module Failed",
        "E50015": "Connect Database Failed",
        "E50016": "Not Allow Cluster With Current Status",
        "E50018": "Lite Cluster Need At Least One Shared Slave",
        "E50019": "IP Conflict",
        "E50100": "Node Create Failed",
        "E50101": "Node Update Failed",
        "E50102": "Node Delete Failed",
        "E50103": "Node Query Failed",
        "E50104": "Node Termination Failed",
        "E50200": "Email Sent Failed",
        "E51000": "Create Provider Error",
        "E51001": "Update Provider Error",
        "E51002": "Delete Provider Error",
        "E51003": "Query Provider Error",
        "E51006": "Provider has been used,can not be deleted",
        "E52000": "Key pair name is blank",
        "E52001": "Key pair name is duplicated",
        "E52002": "Public key is blank",
        "E52003": "Failed to get the key pair owner information",
        "E52004": "Failed to query key pair",
        "E52005": "Failed to delete key pair",
        "E52007": "Key Pair has been used, can not be deleted",
        "E53000": "User name is blank",
        "E53001": "SMTP server url is blank",
        "E53002": "Failed to query smtp servers",
        "E53003": "User name is duplicated",
        "E53004": "SMTP server is duplicated",
        "E53005": "Failed to delete SMTP server",
        "E53006": "Failed to save SMTP server",
        "E57008": "Registry has been used,can not be deleted",
        "E70000": "JSON Format is Wrong",
        "E70003": "Service is Exist",
        "E70011": "Can't Deploy Empty Service",
        "E70014": "Service Port Conflict",
        "E70015": "ID in JSON is Inconsistent with Service Name",
        "E70102": "Component is Exist",
        "E70103": "Service Port Conflict",
        "E70106": "App Format is Wrong",
        "E70111": "App Doesn't Use Absolute Path",
        "E71001": "Failed to create Network",
        "E71005": "Network is using",
        "E71006": "Network checked failed",
        "E71007": "Network parse failed",
        "E72000": "Get Framework Failed",
        "E10018": "ActiveCode is illegal",
        "E10019": "ActiveCode is expired",
        "E10016": "User is not exit",
        "E10015": "Send Email is failed",
        "E10014": "User is illegal"
    }
}